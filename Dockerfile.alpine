# docker build -t sniffer2pcap -f Dockerfile.alpine .
# docker run -p 127.0.0.1:5001:5000/tcp --name sniffer2pcap sniffer2pcap

# Use Alpine Linux with Python 3 as the base image
FROM python:3.12-alpine

# Set environment variables to prevent Python from buffering stdout/stderr
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file to the container
COPY app/requirements.txt /app/

# Install dependencies
RUN apk add --no-cache --virtual .build-deps gcc musl-dev libffi-dev openssl-dev && \
    pip install --no-cache-dir -r requirements.txt && \
    apk del .build-deps

# Copy the application code to the container
COPY app/ /app/

# Expose the application port
EXPOSE 5000

# Define the entry point
ENTRYPOINT ["python3"]

# Run Flask application
CMD ["-m", "flask", "run", "--host=0.0.0.0"]
